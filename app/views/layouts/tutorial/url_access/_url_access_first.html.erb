<div class="widget">
    <div class="widget-header">
      <div class="title">
        <span class="fs1" aria-hidden="true" data-icon="&#xe092;"></span> A8 - Failure to Restrict URL Access
      </div>
    </div>
    <div class="widget-body">
      <div id="accordion1" class="accordion no-margin">
        <div class="accordion-group">
          <div class="accordion-heading">
            <a href="#collapseOne" data-parent="#accordion1" data-toggle="collapse" class="accordion-toggle">
              <i class="icon-info icon-white">
              </i>
              Description
            </a>
          </div>
          <div class="accordion-body in collapse" id="collapseOne" style="height: auto;">
            <div class="accordion-inner">
             Many web applications check URL access rights before rendering protected links and buttons. However, applications need to perform similar access control checks each time these pages are accessed, or attackers will be able to forge URLs to access these hidden pages anyway.
            </div>
          </div>
        </div>
        <div class="accordion-group">
          <div class="accordion-heading">
            <a href="#collapseTwo" data-parent="#accordion1" data-toggle="collapse" class="accordion-toggle">
              <i class="icon-bug icon-white">
              </i>
              Bug
            </a>
          </div>
          <div class="accordion-body collapse" id="collapseTwo" style="height: 0px;">
            <div class="accordion-inner">
              <p class="desc">
        Rails provides the ability to apply before_filter(s) which run prior to rendering content to the user. This is helpful when restricting access to content based on the user's role. Currently, the methods to apply a before_filter already exist in the application controller but were forgotten when creating the administrative functionality. Notice an asbsence of the before_filter within app/controllers/admin_controller.rb
        </p>
        <pre class="ruby">
        <%= %q{
        class AdminController < ApplicationController

          skip_before_filter :has_info
        } %>
        </pre>

            </div>
          </div>
        </div>
        <div class="accordion-group">
          <div class="accordion-heading">
            <a href="#collapseThree" data-parent="#accordion1" data-toggle="collapse" class="accordion-toggle">
              <i class="icon-lightning icon-white">
              </i>
              Solution
            </a>
          </div>
          <div class="accordion-body collapse" id="collapseThree" style="height: 0px;">
            <div class="accordion-inner">
              <p><b>Failure to Restrict URL Access - ATTACK</b></p>
        <p class="desc">
        Request the following URL /admin/1/dashboard and have fun :-)
        </p>
        <p><b>Failure to Restrict URL Access - SOLUTION</b></p>
        <p class="desc">
        The code is already available to restrict access to the admin controller by role within app/controllers/application_controller.rb:
        </p>
        <pre class="ruby">
        helper_method :current_user, <span style="background-color:yellow">:is_admin?</span>

        def is_admin?
            current_user.admin if current_user
          end

          def administrative
            if not is_admin?
             reset_session
             redirect_to root_url
           end
          end
        </pre>
        <p>
        Then add the following line within app/controllers/admin_controller.rb
        </p>
        <pre class="ruby">
        class AdminController < ApplicationController

          <span style="background-color:yellow">before_filter :administrative</span>
          skip_before_filter :has_info
        </pre>
            </div>
          </div>
        </div>
      <div class="accordion-group">
          <div class="accordion-heading">
            <a  style="background-color: rgb(181, 121, 158)" href="#collapseFour" data-parent="#accordion1" data-toggle="collapse" class="accordion-toggle">
              <i class="icon-aid icon-white">
              </i>
              Hint
            </a>
          </div>
          <div class="accordion-body collapse" id="collapseFour" style="height: 0px;">
            <div class="accordion-inner">
              I bet there is some admin functionality in here :-)
            </div>
          </div>
        </div>
  </div>
    </div>
  </div>